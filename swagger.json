{
	"openapi": "3.0.0",
	"info": {
		"title": "Hop API",
		"version": "1.0.0",
		"description": "API for managing users, spaces, and friendships in the Hop application"
	},
	"paths": {
		"/api": {
			"get": {
				"summary": "Welcome message",
				"tags": ["Info"],
				"responses": {
					"200": {
						"description": "Successful response",
						"content": {
							"text/plain": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/api/user": {
			"get": {
				"summary": "Get all users",
				"tags": ["User"],
				"responses": {
					"200": {
						"description": "Successful response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/User"
									}
								}
							}
						}
					},
					"500": {
						"description": "Server error"
					}
				}
			},
			"post": {
				"summary": "Create a new user",
				"tags": ["User"],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/NewUser"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "User created successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					},
					"500": {
						"description": "Server error"
					}
				}
			}
		},
		"/api/user/{id}": {
			"get": {
				"summary": "Get a user by ID",
				"tags": ["User"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful response",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/User"
								}
							}
						}
					},
					"404": {
						"description": "User not found"
					},
					"500": {
						"description": "Server error"
					}
				}
			},
			"delete": {
				"summary": "Delete a user",
				"tags": ["User"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"202": {
						"description": "User deleted successfully"
					},
					"404": {
						"description": "User not found"
					},
					"500": {
						"description": "Server error"
					}
				}
			}
		},
		"/api/user/friend/{userId}/{friendId}": {
			"post": {
				"summary": "Add a friend",
				"tags": ["User"],
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "friendId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Friend added successfully"
					},
					"400": {
						"description": "Failed to add friend"
					},
					"500": {
						"description": "Server error"
					}
				}
			},
			"delete": {
				"summary": "Delete a friend",
				"tags": ["User"],
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "friendId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"202": {
						"description": "Friend deleted successfully"
					},
					"404": {
						"description": "Friendship not found"
					},
					"500": {
						"description": "Server error"
					}
				}
			}
		},
		"/api/user/friend/{userId}": {
			"get": {
				"summary": "Get all friends of a user",
				"tags": ["User"],
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/User"
									}
								}
							}
						}
					},
					"500": {
						"description": "Server error"
					}
				}
			}
		},
		"/api/space": {
			"post": {
				"summary": "Create a new space",
				"tags": ["Space"],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/NewSpace"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "Space created successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Space"
								}
							}
						}
					},
					"400": {
						"description": "Could not create space"
					},
					"500": {
						"description": "Server error"
					}
				}
			}
		},
		"/api/space/{id}": {
			"delete": {
				"summary": "Delete a space",
				"tags": ["Space"],
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"202": {
						"description": "Space deleted successfully"
					},
					"400": {
						"description": "Space not found"
					},
					"500": {
						"description": "Server error"
					}
				}
			}
		},
		"/api/space/addUser": {
			"post": {
				"summary": "Add a user to a space",
				"tags": ["Space"],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AddUserToSpace"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "User added to space successfully"
					},
					"400": {
						"description": "Could not add user to space"
					},
					"500": {
						"description": "Server error"
					}
				}
			}
		},
		"/api/space/myspaces/{userId}": {
			"get": {
				"summary": "Get spaces where user is admin",
				"tags": ["Space"],
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Space"
									}
								}
							}
						}
					},
					"500": {
						"description": "Server error"
					}
				}
			}
		},
		"/api/space/invitedspaces/{userId}": {
			"get": {
				"summary": "Get spaces where user is invited",
				"tags": ["Space"],
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful response",
						"content": {
							"application/json": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/Space"
									}
								}
							}
						}
					},
					"500": {
						"description": "Server error"
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"NewUser": {
				"type": "object",
				"properties": {
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"profilePicture": {
						"type": "string"
					},
					"nickname": {
						"type": "string"
					}
				},
				"required": ["username", "password", "email", "profilePicture"]
			},
			"User": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid"
					},
					"username": {
						"type": "string"
					},
					"nickname": {
						"type": "string"
					},
					"profilePicture": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				}
			},
			"NewSpace": {
				"type": "object",
				"properties": {
					"name": {
						"type": "string"
					},
					"flyUrl": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"theme": {
						"type": "string",
						"enum": ["default"]
					}
				},
				"required": ["name", "flyUrl", "userId"]
			},
			"Space": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid"
					},
					"name": {
						"type": "string"
					},
					"flyUrl": {
						"type": "string"
					},
					"theme": {
						"type": "string",
						"enum": ["default"]
					}
				}
			},
			"AddUserToSpace": {
				"type": "object",
				"properties": {
					"spaceId": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"role": {
						"type": "string",
						"enum": ["anonymous", "member", "editor", "admin"]
					}
				},
				"required": ["spaceId", "userId", "role"]
			},
			"UserCredentials": {
				"type": "object",
				"properties": {
					"email": {
						"type": "string"
					},
					"password": {
						"type": "string"
					},
					"userId": {
						"type": "string",
						"format": "uuid"
					}
				}
			},
			"Friend": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid"
					},
					"userId": {
						"type": "string",
						"format": "uuid"
					},
					"friendId": {
						"type": "string",
						"format": "uuid"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				}
			},
			"SpaceMember": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid"
					},
					"spaceId": {
						"type": "string",
						"format": "uuid"
					},
					"userId": {
						"type": "string",
						"format": "uuid"
					},
					"role": {
						"type": "string",
						"enum": ["anonymous", "member", "editor", "admin"]
					},
					"lastConnection": {
						"type": "string",
						"format": "date-time"
					}
				}
			},
			"UserStatus": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"format": "uuid"
					},
					"userId": {
						"type": "string",
						"format": "uuid"
					},
					"spaceId": {
						"type": "string",
						"format": "uuid"
					}
				}
			}
		}
	}
}
